name: "CI"
on: [pull_request, push]
jobs:
  krew-plugins-check:
    name: Validate PR ${{ github.event.pull_request.head.sha }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
         
    - name: Setup Minikube
      id: minikube
      uses: CodingNagger/minikube-setup-action@v1.0.2

    - name: Start Minikube
      run: eval ${{ steps.minikube.outputs.launcher }} && (printf "\n\u2705[PASS] Minikube Ready\n") || (printf "\n\u274c [FAIL] Error while starting Minikube.\n" && exit 1)

    - name: Sanity Check
      run: kubectl get pods -nkube-system && (printf "\n\u2705[PASS] Sanity Check (get pods)\n") || (printf "\n\u274c [FAIL] Unable to retrieve pod list.\n" && exit 1)

    - name: Install Krew
      shell: bash -l {0}
      run: |
        # install krew (use latest release)
        (
          set -x; cd "$(mktemp -d)" &&
          krew_latest=$(basename $(curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/kubernetes-sigs/krew/releases/latest))
          curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/download/${krew_latest}/krew.{tar.gz,yaml}"
          tar zxvf krew.tar.gz &&
          KREW=./krew-"$(uname | tr '[:upper:]' '[:lower:]')_amd64" &&
          "$KREW" install --manifest=krew.yaml --archive=krew.tar.gz &&
          "$KREW" update
        )

    - name: Test Install
      shell: bash -l {0}
      run: |
        export PATH="~/.krew/bin:$PATH"
        plugins=('kubectl-ssh' 'kubectl-prompt')
        for plugin in "${plugins[@]}"; do
          kubectl krew install --manifest=./plugins/${plugin}.yaml
          [ $? -ne 0 ] && (printf "\n\u274c [FAIL] Error installing $plugin - exit code $?") && exit 1
          (printf "\n\u2705[OK] ${plugin} successfully installed\n-------------\n")
        done

    - name: Run kubectl-ssh
      shell: bash -l {0}
      run: |
        kubectl config set-context $(kubectl config current-context) --namespace=kube-system && (printf "\n\u2705[PASS] Installation Script.\n") || (printf "\n\u274c [FAIL] Installation error\n" && exit 1)
        kubectl run test --restart=Never --image=debian --command=true -- sleep 300
        sleep 10
        # Grant shell login for games user
        kubectl exec test -- usermod -s /bin/sh games
        # Necessary changes without attached tty
        sed -i 's|"-it",||g' $(which kubectl-ssh)
        sed -i 's| -it | --attach=true |g' $(which kubectl-ssh)
        sed -i 's|"tty": true|"tty": false|g' $(which kubectl-ssh)
        sed -i 's|"stdin": true|"stdin": false|g' $(which kubectl-ssh)
        sed -i 's|"stdinOnce": true|"stdinOnce": false|g' $(which kubectl-ssh)
        if [[ $(kubectl ssh -u games test -- whoami | tail -n1) == "games" ]]; then 
          printf "\n\u2705 Successfully logged in as games user.\n"
        else
          printf "\n\u274c Unable to login as games user.\n"
          exit 1
        fi

    - name: Run kubectl-prompt
      shell: bash -l {0}
      run: |
        # Interactive input required. Just validate the help prompt.
        kubectl prompt --help && (printf "\n\u2705[PASS] Validated -h on prompt\n") || (printf "\n\u274c [FAIL] Prompt plugin: Unexpected output.\n" && exit 1)
