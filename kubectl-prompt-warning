#!/usr/bin/env bash

RED=$(echo -en '\033[00;31m')
RESTORE=$(echo -en '\033[0m')

COMMAND="${@}"

function prompt() {
    clear; echo -e "\n${RED}You are operating in a flagged environment: ${NAMESPACE}${CLUSTER}. Proceed?${RESTORE}\n"
    read -p "${RED}[yes/no]:${RESTORE} " answer
    echo -e "\n\n"
    [[ "$answer" != "yes" ]] && exit 1
    exit 0
}

# Skip checks if user has not assigned any (using kubectl prompt add [-n namespace OR -c cluster]
if [[ ! -z "$KUBECTL_NAMESPACE_PROMPT" ]] || [[ ! -z "$KUBECTL_CLUSTER_PROMPT" ]]; then
    echo "$@" | grep "deploy\|create\|apply\|set \|delete\|scale " 1>/dev/null
    if [ $? -eq 0 ]; then
        NAMESPACE=$(kubectl config view --template='{{ range .contexts }}{{ if eq .name "'$(kubectl config current-context)'" }}{{ .context.namespace }}{{ end }}{{ end }}')
        CLUSTER=$(kubectl config view --template='{{ range .contexts }}{{ if eq .name "'$(kubectl config current-context)'" }}{{ .context.cluster }}{{ end }}{{ end }}')
        if [[ "$KUBECTL_NAMESPACE_PROMPT" =~ "$NAMESPACE" ]]; then
            CLUSTER=''
            prompt "$NAMESPACE"
        elif [[ "$KUBECTL_CLUSTER_PROMPT" =~ "$CLUSTER" ]]; then
            NAMESPACE=''
            prompt "$CLUSTER"
        fi
    fi
fi

exit 0
